from typing import Any
from typing import Dict

from mcp.server.fastmcp import FastMCP

from neuro_san.client.direct_agent_session_factory import DirectAgentSessionFactory
from neuro_san.client.streaming_input_processor import StreamingInputProcessor


mcp = FastMCP("neuro_san", port=8000)


@mcp.tool()
async def neuro_san(agent_network_name: str, query: str) -> str:
    """
    A multi-purpose interface for interacting with various agent networks based on the specified `agent_network_name`.

    Available agent networks:
    - **date_time**: Provides the current date and time.
    - **music_nerd**: Answers music-related questions.
    - **website_search**: Performs internet searches.

    :param agent_network_name: The name of the agent network to use (e.g., 'date_time', 'music_nerd', 'website_search').
    :param query: The input query or prompt to send to the selected agent network.

    :return: The response generated by the selected agent network.
    """
    factory = DirectAgentSessionFactory()
    session = factory.create_session(agent_name=agent_network_name)
    processor = StreamingInputProcessor(session=session)
    state: Dict[str, Any] = {
                "last_chat_response": None,
                "prompt": "",
                "num_input": 0,
                "user_input": query,
            }

    state = processor.process_once(state)
    return state.get("last_chat_response")


if __name__ == "__main__":
    mcp.run(transport="sse")
